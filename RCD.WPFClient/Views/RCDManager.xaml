<Window x:Class="RCD.WPFClient.Views.RCDManager"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:RCD.WPFClient.Views"
	xmlns:validationRules="clr-namespace:RCD.WPFClient.ValidationRules"
    mc:Ignorable="d" 
    d:DesignHeight="480" d:DesignWidth="640"
	MinHeight="480" MinWidth="640"
	Height="480" Width="640"
	Title="RotS Class Designer WPF"
	WindowStartupLocation="CenterOwner"
	>

	<Window.Resources>
		<Style x:Key="AddCircleButton" TargetType="{x:Type Control}">
			<Setter Property="Height" Value="20"/>
			<Setter Property="Width" Value="20"/>
			<Setter Property="FontFamily" Value="Tahoma"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Grid.Resources>
								<Style TargetType="{x:Type Rectangle}">
									<Setter Property="VerticalAlignment" Value="Center"/>
									<Setter Property="RenderTransformOrigin" Value=".5,.5"/>
									<Setter Property="HorizontalAlignment" Value="Center"/>
									<Setter Property="Height" Value="1"/>
									<Setter Property="Width" Value="10"/>
									<Setter Property="Margin" Value="1"/>
									<Setter Property="Stroke" Value="Green"/>
								</Style>
							</Grid.Resources>
							<Ellipse Stroke="Green" StrokeThickness="1"/>
							<Rectangle />
							<Rectangle>
								<Rectangle.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="90"/>
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DeleteCircleButton" TargetType="{x:Type Control}">
			<Setter Property="Height" Value="20"/>
			<Setter Property="Width" Value="20"/>
			<Setter Property="FontFamily" Value="Tahoma"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Grid.Resources>
								<Style TargetType="{x:Type Rectangle}">
									<Setter Property="VerticalAlignment" Value="Center"/>
									<Setter Property="RenderTransformOrigin" Value=".5,.5"/>
									<Setter Property="HorizontalAlignment" Value="Center"/>
									<Setter Property="Height" Value="1"/>
									<Setter Property="Width" Value="10"/>
									<Setter Property="Margin" Value="1"/>
									<Setter Property="Stroke" Value="Red"/>
								</Style>
							</Grid.Resources>
							<Ellipse Stroke="Red" StrokeThickness="1"/>
							<Rectangle>
								<Rectangle.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="45"/>
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle>
								<Rectangle.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="-45"/>
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
							<!--<ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>

			<!--ToolStrip-->
			<RowDefinition Height="20"/>
			<!--Title-->
			<RowDefinition Height="60"/>
			<!--Class and Race Selection-->
			<RowDefinition Height="50"/>
			<!--Points and Level Selections-->
			<RowDefinition Height="150"/>
			<!--Skills Display-->
			<RowDefinition Height="50*"/>
		</Grid.RowDefinitions>
		<GridSplitter Grid.Row="4" Height="5" HorizontalAlignment="Stretch" />

		<!--	DockPanel for MenuBar	-->
		<DockPanel Grid.Row="0">
			<Menu DockPanel.Dock="Top">
				<MenuItem Header="_File">
					<MenuItem Name="close" Header="_Close"/>
				</MenuItem>
				<MenuItem Header="_Help">
					<MenuItem Header="_About"/>
				</MenuItem>
			</Menu>
		</DockPanel>
		<!--	/DockPanel for MenuBar	-->

		<!--	DockPanel for Title	-->
		<DockPanel Grid.Row="1">
			<Label Content="RotS Class Designer" FontSize="30" FontFamily="Tahoma" Foreground="Black" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
		</DockPanel>
		<!--	/DockPanel for Title	-->

		<!--	DockPanel for Class and Race Selection	-->
		<DockPanel Grid.Row="2">
			<Grid Name="classSelectionGrid">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="150"/>
					<ColumnDefinition Width="400"/>
					<ColumnDefinition Width="25"/>
					<ColumnDefinition Width="25"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="25"/>
					<RowDefinition Height="25"/>
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="1" HorizontalContentAlignment="Right" VerticalAlignment="Center" Content="Class:"/>
				<ComboBox Name="classComboBox" Grid.Row="0" Grid.Column="2" HorizontalContentAlignment="Stretch" VerticalAlignment="Center" Margin="5,0"
						  ItemsSource="{Binding Profiles}"
						  DisplayMemberPath="ClassProfileName"
						  SelectedValue="{Binding SelectedProfile}"
						  />
				<Button Name="add" Grid.Row="0" Grid.Column="3" Style="{StaticResource AddCircleButton}" Margin="0" Command="{Binding AddClassCommand}"/>
				<Button Name="delete"	Grid.Row="0" Grid.Column="4" Style="{StaticResource DeleteCircleButton}" Content="Delete" Margin="0" FontSize="9"/>

				<Label Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Right" VerticalAlignment="Center" Content="Race:"/>
				<StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
					<StackPanel.Resources>
						<Style TargetType="{x:Type RadioButton}">
							<Setter Property="Margin" Value="5,0,5,0"/>
						</Style>
					</StackPanel.Resources>
					<RadioButton IsChecked="True" Name="lightButton" GroupName="Race">
						<TextBlock Text="Light" HorizontalAlignment="Right" VerticalAlignment="Center"/>
					</RadioButton>
					<RadioButton Name="darkButton" GroupName="Race">
						<TextBlock Text="Dark" HorizontalAlignment="Right" VerticalAlignment="Center"/>
					</RadioButton>
					<RadioButton Name="orcButton" GroupName="Race">
						<TextBlock Text="Orc" HorizontalAlignment="Right" VerticalAlignment="Center"/>
					</RadioButton>
				</StackPanel>

			</Grid>
		</DockPanel>
		<!--	/DockPanel for Class and Race Selection	-->

		<!--	DockPanel for Points and Levels		-->
		<DockPanel Grid.Row="3">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="150" />
					<ColumnDefinition Width="150" />
					<ColumnDefinition Width="150" />
					<ColumnDefinition Width="150" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="30"/>
					<RowDefinition Height="30" />
					<RowDefinition Height="30" />
					<RowDefinition Height="30" />
					<RowDefinition Height="30" />
				</Grid.RowDefinitions>

				<Label Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Level"/>
				<Label Grid.Row="0" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Points"/>
				<Label Grid.Row="0" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Modified Level"/>

				<Label Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Warrior:"/>
				<TextBox Name="warriorLevel" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0" >
					<TextBox.Text>
						<Binding Path="WarriorLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBox Name="warriorPoints" Grid.Row="1" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0" >
					<TextBox.Text>
						<Binding Path="WarriorPoints" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBox Name="warriorModified" Grid.Row="1" Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0" IsReadOnly="True" >
					<TextBox.Text>
						<Binding Path="WarriorModifiedLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>

				<Label Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Ranger:"/>
				<TextBox Name="rangerLevel" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0">
					<TextBox.Text>
						<Binding Path="RangerLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBox Name="rangerPoints" Grid.Row="2" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0"  >
					<TextBox.Text>
						<Binding Path="RangerPoints" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBox Name="rangerModified" Grid.Row="2" Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0" IsReadOnly="True"  >
					<TextBox.Text>
						<Binding Path="RangerModifiedLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>

				<Label Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Mystic:"/>
				<TextBox Name="mysticLevel" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0" >
					<TextBox.Text>
						<Binding Path="MysticLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBox Name="mysticPoints" Grid.Row="3" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0"  >
					<TextBox.Text>
						<Binding Path="MysticPoints" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBox Name="mysticModified" Grid.Row="3" Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0" IsReadOnly="True" >
					<TextBox.Text>
						<Binding Path="MysticModifiedLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>

				<Label Grid.Row="4" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Mage:"/>
				<TextBox Name="mageLevel" Grid.Row="4" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0" >
					<TextBox.Text>
						<Binding Path="MageLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBox Name="magePoints" Grid.Row="4" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0"  >
					<TextBox.Text>
						<Binding Path="MagePoints" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBox Name="mageModified" Grid.Row="4" Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0" IsReadOnly="True"  >
					<TextBox.Text>
						<Binding Path="MageModifiedLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
							<Binding.ValidationRules>
								<validationRules:IntegerValidationRule ValidatesOnTargetUpdated="True"/>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>

			</Grid>
		</DockPanel>
		<!--	/DockPanel for Points and Levels	-->

		<!--	DockPanel for Skills		-->
		<DockPanel Grid.Row="4">
			<DataGrid x:Name="skillsGrid" RowHeaderWidth="{Binding RelativeSource={RelativeSource Self}}" AlternatingRowBackground="LightGray" ItemsSource="{Binding AvailableSkills }"  AutoGenerateColumns="False" CanUserResizeColumns="False" ColumnWidth="Auto" CanUserAddRows="False" IsReadOnly="True" CanUserDeleteRows="False">
				<DataGrid.Columns>
					<DataGridTextColumn Header="Skill Name" Binding="{Binding SkillName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto"/>
					<DataGridTextColumn Header="Race" Binding="{Binding Race, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto"/>
					<DataGridTextColumn Header="Class" Binding="{Binding Class, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto"/>
					<DataGridTextColumn Header="Skill Level" Binding="{Binding SkillLevel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto"/>
					<DataGridTextColumn Header="Specialization" Binding="{Binding SpecializationType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
				</DataGrid.Columns>
			</DataGrid>
		</DockPanel>
		<!--	/DockPanel for Skills		-->
		
	</Grid>
</Window>
